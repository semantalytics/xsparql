
import module namespace _xsparql = "http://xsparql.deri.org/XSPARQLer/xsparql.xquery"
at "http://xsparql.deri.org/XSPARQLer/xsparql.xquery";

declare namespace _sparql_result = "http://www.w3.org/2005/sparql-results#";

declare namespace foaf = "http://xmlns.com/foaf/0.1/" ;
declare default element namespace "http://www.w3.org/1999/xhtml" ;
declare variable $_NS1 := "prefix  foaf:  &#60;http://xmlns.com/foaf/0.1/&#62;";
declare variable $_NS2 := "prefix  :  &#60;http://www.w3.org/1999/xhtml&#62;";

 _xsparql:_serialize((  "  
@", $_NS1, ".", "  
@", $_NS2, ".", "
" )),

  
let $doc  := doc("http://cgi.w3.org/cgi-bin/tidy?docAddr=http%3A%2F%2Ftwitter.com%2Fterraces"   )  

let $author  := $doc//*[@class = "about vcard entry-author"  ]  

let $authorhp  := data($author/li/a/@href   )  

let $friends  := $doc//*[@id = "friends"  ]  
for $f at $_f_Pos  in $friends   

let $_validObject1 := _xsparql:_serialize(("<" , $authorhp   , ">")) 



  return ( _xsparql:_removeEmpty( 
		 _xsparql:_serialize(( 
		 "[", if ( _xsparql:_validObject( "",  $_validObject1  ) ) then (
		  
	   _xsparql:_serialize((" foaf:homepage ",     $_validObject1, "&#59;"))  
  ) else "" 
, " ] .&#xA;" 
		)) 
		 ) )


import module namespace _xsparql = "http://xsparql.deri.org/xsparql.xquery"
at "http://xsparql.deri.org/xsparql.xquery";

declare namespace _sparql_result = "http://www.w3.org/2005/sparql-results#";

declare namespace foaf = "http://xmlns.com/foaf/0.1/" ;
declare variable $_NS1 := "prefix  foaf:  &#60;http://xmlns.com/foaf/0.1/&#62;";

 fn:concat(  "  
@", $_NS1, ".", "
" ),

  for $person at $_person_Pos  in doc("http://xsparql.deri.org/data/relations.xml"   )//person  , 
 $nameA at $_nameA_Pos  in $person/@name  , 
 $nameB at $_nameB_Pos  in $person/knows   

let $_validObject1 := fn:concat( '"',   data($nameA   )   ,  '"') 
let $_validObject2 := fn:concat( '"',   data($nameA   )   ,  '"') 



  return ( _xsparql:_removeEmpty( 
		 fn:concat( 
		 "[]", 
	 if ( _xsparql:_validObject( "",  $_validObject1  ) ) then (
		  
	   fn:concat(" foaf:name ", $_validObject1, "&#59;")  
  ) else "",  
	   
	  
	 if ( _xsparql:_validObject( "",  $_validObject2  ) ) then (
		 fn:concat(" foaf:mbox ", $_validObject2, "&#59;") ) else "" , 
	  fn:concat(" foaf:mbox ",   '"as@as.com"', "&#59;")  
, " .&#xA;" 
		) 
		 )  )

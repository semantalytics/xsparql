
import module namespace _xsparql = "http://xsparql.deri.org/xsparql.xquery"
at "http://xsparql.deri.org/xsparql.xquery";

declare namespace _sparql_result = "http://www.w3.org/2005/sparql-results#";

declare default element namespace "http://www.example.org";

declare variable $_NS1 := "prefix  :  &#60;http://www.example.org&#62;";

 fn:concat(  "  
@", $_NS1, ".", "
" ),

let $_aux1 := fn:concat("http://localhost:2020/sparql?query=", fn:encode-for-uri( fn:concat(  $_NS1, "
select $g $s $p $o  where {  graph  $g  {  $s  $p  $o    }   } ")))
for $_aux_result1 at $_aux_result1_Pos in doc($_aux1)//_sparql_result:result
	let $_g_Node := ($_aux_result1/_sparql_result:binding[@name = "g"])
	let $_g_NodeType := name($_g_Node/*)
	let $_g_NodeDatatype := string($_g_Node/*/@datatype)
	let $_g_NodeLang := string($_g_Node/*/@lang)
	let $g := data($_g_Node/*)
	let $_g_RDFTerm :=  _xsparql:_rdf_term($_g_NodeType, $g, $_g_NodeLang, $_g_NodeDatatype )
	let $_s_Node := ($_aux_result1/_sparql_result:binding[@name = "s"])
	let $_s_NodeType := name($_s_Node/*)
	let $_s_NodeDatatype := string($_s_Node/*/@datatype)
	let $_s_NodeLang := string($_s_Node/*/@lang)
	let $s := data($_s_Node/*)
	let $_s_RDFTerm :=  _xsparql:_rdf_term($_s_NodeType, $s, $_s_NodeLang, $_s_NodeDatatype )
	let $_p_Node := ($_aux_result1/_sparql_result:binding[@name = "p"])
	let $_p_NodeType := name($_p_Node/*)
	let $_p_NodeDatatype := string($_p_Node/*/@datatype)
	let $_p_NodeLang := string($_p_Node/*/@lang)
	let $p := data($_p_Node/*)
	let $_p_RDFTerm :=  _xsparql:_rdf_term($_p_NodeType, $p, $_p_NodeLang, $_p_NodeDatatype )
	let $_o_Node := ($_aux_result1/_sparql_result:binding[@name = "o"])
	let $_o_NodeType := name($_o_Node/*)
	let $_o_NodeDatatype := string($_o_Node/*/@datatype)
	let $_o_NodeLang := string($_o_Node/*/@lang)
	let $o := data($_o_Node/*)
	let $_o_RDFTerm :=  _xsparql:_rdf_term($_o_NodeType, $o, $_o_NodeLang, $_o_NodeDatatype )


 return 
	   
		
 
	 if ( _xsparql:_validSubject( "",  $_g_RDFTerm  ) ) then (
		if ( _xsparql:_validPredicate( "",  $_g_RDFTerm  ) ) then (
		 
		 if ( _xsparql:_validObject( "",  $_g_RDFTerm  ) ) then (
		 fn:concat( 
		 $_g_RDFTerm,  " ", $_g_RDFTerm," ", $_g_RDFTerm, " .&#xA;"
		)
 ) else ""
		 
  ) else "" ) else "" 


import module namespace _xsparql = "http://xsparql.deri.org/xsparql.xquery"
at "http://xsparql.deri.org/xsparql.xquery";

declare namespace _sparql_result = "http://www.w3.org/2005/sparql-results#";

declare default element namespace "http://www.example.org";
declare namespace foaf = "http://xmlns.com/foaf/0.1/";
declare namespace dct = "http://purl.org/dc/terms/";



declare function local:_distribution_count ( $s , $i , $c ) { 
let $x  := if ( $i > count($s   )   ) then ()   else if ( $s[$i  ] eq $s[$i+1  ]   ) then local:_distribution_count($s   , $i+1   , $c+1   )   else fn:concat(fn:concat($s[$i  ]   , ", "   , $c   )   , "
 "   , local:_distribution_count($s   , $i+1   , 1   )   )  
 return $x   } ;
declare variable $_NS1 := "prefix  :  &#60;http://www.example.org&#62;";
declare variable $_NS2 := "prefix  foaf:  &#60;http://xmlns.com/foaf/0.1/&#62;";
declare variable $_NS3 := "prefix  dct:  &#60;http://purl.org/dc/terms/&#62;";

let $days  := 
let $_aux1 := fn:concat("http://localhost:2020/sparql?query=", fn:encode-for-uri( fn:concat(  $_NS1,  $_NS2,  $_NS3, "
select $entry $date  where {    $entry   dct:created    $date   .   } ")))
for $_aux_result1 at $_aux_result1_Pos in doc($_aux1)//_sparql_result:result
	let $_entry_Node := ($_aux_result1/_sparql_result:binding[@name = "entry"])
	let $_entry_NodeType := name($_entry_Node/*)
	let $_entry_NodeDatatype := string($_entry_Node/*/@datatype)
	let $_entry_NodeLang := string($_entry_Node/*/@lang)
	let $entry := data($_entry_Node/*)
	let $_entry_RDFTerm :=  _xsparql:_rdf_term($_entry_NodeType, $entry, $_entry_NodeLang, $_entry_NodeDatatype )
	let $_date_Node := ($_aux_result1/_sparql_result:binding[@name = "date"])
	let $_date_NodeType := name($_date_Node/*)
	let $_date_NodeDatatype := string($_date_Node/*/@datatype)
	let $_date_NodeLang := string($_date_Node/*/@lang)
	let $date := data($_date_Node/*)
	let $_date_RDFTerm :=  _xsparql:_rdf_term($_date_NodeType, $date, $_date_NodeLang, $_date_NodeDatatype )

let $day  := day-from-dateTime(xs:dateTime($date   )   )  
order by $day    return $day  
 return local:_distribution_count($days   , 1   , 1   )  


import module namespace _xsparql = "http://xsparql.deri.org/XSPARQLer/xsparql.xquery"
at "http://xsparql.deri.org/XSPARQLer/xsparql.xquery";

declare namespace _sparql_result = "http://www.w3.org/2005/sparql-results#";

declare namespace foaf = "http://xmlns.com/foaf/0.1/" ;
declare namespace ex = "http://example.org" ;
declare default element namespace "http://www.w3.org/1999/xhtml" ;
declare variable $_NS1 := "prefix  foaf:  &#60;http://xmlns.com/foaf/0.1/&#62;";
declare variable $_NS2 := "prefix  ex:  &#60;http://example.org&#62;";
declare variable $_NS3 := "prefix  :  &#60;http://www.w3.org/1999/xhtml&#62;";

 fn:concat(  "  
@", $_NS1, ".", "  
@", $_NS2, ".", "  
@", $_NS3, ".", "
" ),

  
let $doc  := doc("http://cgi.w3.org/cgi-bin/tidy?docAddr=http%3A%2F%2Ftwitter.com%2Fterraces"   )  

let $friends  := $doc//*[@id = "friends"  ]/span[@class = "vcard"  ]  
for $f at $_f_Pos  in $friends  
let $friendsAccount  := $f/*/@href  

let $f  := "http://apassant.net/alex"  
 

let $_validSubject1 := fn:concat("<" , $f   , ">") 
let $_validObject2 := fn:concat("<" , $friendsAccount   , ">") 



  return ( 
	 if ( _xsparql:_validSubject( "",  $_validSubject1  ) ) then (
		 
		   
	   fn:concat( 
		     $_validSubject1  ,   " : ", "[", if ( _xsparql:_validObject( "",  $_validObject2  ) ) then (
		  
	   fn:concat(" foaf:userAccount ",     $_validObject2, "&#59;")  
  ) else "", " ]", " .&#xA;" 
		 ) 
  

		 
  ) else ""  )

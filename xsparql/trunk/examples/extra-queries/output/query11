
import module namespace local = "http://xsparql.deri.org/xsparql.xquery"
at "http://xsparql.deri.org/xsparql.xquery";

declare namespace sparql_result = "http://www.w3.org/2005/sparql-results#";

declare variable $NS_1 := "prefix  foaf:  &#60;http://xmlns.com/foaf/0.1/&#62;";

 fn:concat(  "  
@", $NS_1, ".", "
" ),

let $aux1 := fn:concat("http://localhost:2020/sparql?query=", fn:encode-for-uri( fn:concat(  $NS_1, "
select $N from <http://polleres.net/foaf.rdf>  where { [  foaf:knows [   a  foaf:Person   ;  foaf:name    $N    
  ]
   ;  ]
 . } ")))
for $aux_result1 at $aux_result1_Pos in doc($aux1)//sparql_result:result
	let $N_Node := ($aux_result1/sparql_result:binding[@name = "N"])
	let $N_NodeType := name($N_Node/*)
	let $N := data($N_Node/*)
	let $N_RDFTerm :=  local:rdf_term($N_NodeType, $N )


 return 
	   
		
 
	 if ( local:validSubject( "",  $N_RDFTerm  ) ) then (
		 
		 if ( local:validObject( "",  $N_RDFTerm  ) ) then (
		 fn:concat( 
		 $N_RDFTerm,  " $N_RDFTerm ", $N_RDFTerm, " .&#xA;"
		)
 ) else ""
		 
  ) else "" 

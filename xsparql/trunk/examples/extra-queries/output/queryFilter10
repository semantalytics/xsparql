
import module namespace _xsparql = "http://xsparql.deri.org/xsparql.xquery"
at "http://xsparql.deri.org/xsparql.xquery";

declare namespace _sparql_result = "http://www.w3.org/2005/sparql-results#";

declare namespace vc = "http://www.w3.org/2001/vcard-rdf/3.0#";
declare namespace foaf = "http://xmlns.com/foaf/0.1/";
declare namespace app = "http://example.org/ns#";



declare variable $_NS1 := "prefix  vc:  &#60;http://www.w3.org/2001/vcard-rdf/3.0#&#62;";
declare variable $_NS2 := "prefix  foaf:  &#60;http://xmlns.com/foaf/0.1/&#62;";
declare variable $_NS3 := "prefix  app:  &#60;http://example.org/ns#&#62;";

let $_aux1 := fn:concat("http://localhost:2020/sparql?query=", fn:encode-for-uri( fn:concat(  $_NS1,  $_NS2,  $_NS3, "
select $Person $Name from <http://xsparql.deri.org/data/relations.rdf>  where {    $Person   foaf:name    $Name   .  filter  LANGMATCHES(LANG($title   )   , ""*""   )  .   } ")))
for $_aux_result1 at $_aux_result1_Pos in doc($_aux1)//_sparql_result:result
	let $_Person_Node := ($_aux_result1/_sparql_result:binding[@name = "Person"])
	let $_Person_NodeType := name($_Person_Node/*)
	let $Person := data($_Person_Node/*)
	let $_Person_RDFTerm :=  _xsparql:_rdf_term($_Person_NodeType, $Person )
	let $_Name_Node := ($_aux_result1/_sparql_result:binding[@name = "Name"])
	let $_Name_NodeType := name($_Name_Node/*)
	let $Name := data($_Name_Node/*)
	let $_Name_RDFTerm :=  _xsparql:_rdf_term($_Name_NodeType, $Name )
 return $Name  


import module namespace _xsparql = "http://xsparql.deri.org/XSPARQLer/xsparql.xquery"
at "http://xsparql.deri.org/XSPARQLer/xsparql.xquery";

declare namespace _sparql_result = "http://www.w3.org/2005/sparql-results#";

declare namespace rdf = "http://www.w3.org/1999/02/22-rdf-syntax-ns#" ;
declare namespace rdfs = "http://www.w3.org/2000/01/rdf-schema#" ;
declare namespace xhtml = "http://www.w3.org/1999/xhtml" ;
declare namespace owl = "http://www.w3.org/2002/07/owl#" ;
declare variable $_NS1 := "prefix  rdf:  &#60;http://www.w3.org/1999/02/22-rdf-syntax-ns#&#62;";
declare variable $_NS2 := "prefix  rdfs:  &#60;http://www.w3.org/2000/01/rdf-schema#&#62;";
declare variable $_NS3 := "prefix  xhtml:  &#60;http://www.w3.org/1999/xhtml&#62;";
declare variable $_NS4 := "prefix  owl:  &#60;http://www.w3.org/2002/07/owl#&#62;";

 fn:concat(  "  
@", $_NS1, ".", "  
@", $_NS2, ".", "  
@", $_NS3, ".", "  
@", $_NS4, ".", "
" ),

  
let $doc  := doc("http://apassant.net/"   )  
for $t at $_t_Pos  in $doc//.[@about  or @src ]  
let $s  := data($t/@about   )  
 

let $_validObject1 := fn:concat("<" , $s   , ">") 



  return (   
	  if ( _xsparql:_validObject( "",  $_validObject1  ) ) then (
		 fn:concat( 
		   'rdf:a',   " rdf:b ",     $_validObject1  ,  " .&#xA;"
		)
 ) else ""  
 )

prefix mo: <http://purl.org/ontology/mo/>
prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> 
prefix foaf: <http://xmlns.com/foaf/0.1/> 
prefix lfm: <http://purl.org/ontology/last-fm/> 
prefix dc: <http://purl.org/dc/elements/1.1/> 
prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> 
prefix geo: <http://www.w3.org/2003/01/geo/wgs84_pos#> 
prefix event: <http://purl.org/NET/c4dm/event.owl#>
prefix xs: <http://www.w3.org/2001/XMLSchema>
prefix dbprop: <http://dbpedia.org/property/>

let $doc := fn:concat("http://ws.audioscrobbler.com/2.0/?method=user.gettopartists")
  for $artist in doc($doc//artist)
  return
  let $artistname := data($artist//name)
  let $uri := xs:anyURI(fn:concat("http://dbpedia.org/resource/", fn:replace(fn:encode-for-uri($artistName), " ", "_"))
  for $origin from $uri
  where { [] dbprop:origin $origin }

return
      <artists>
        <artist>
          <name>{$artistname}</name>
          <origin>{$origin}</origin>
        </artist>
       </artists>
else () 



import module namespace _xsparql = "http://xsparql.deri.org/XSPARQLer/xsparql.xquery"
at "http://xsparql.deri.org/XSPARQLer/xsparql.xquery";

declare namespace _sparql_result = "http://www.w3.org/2005/sparql-results#";

declare namespace foaf = "http://xmlns.com/foaf/0.1/";

declare variable $_NS1 := "prefix  foaf:  &#60;http://xmlns.com/foaf/0.1/&#62;";
<namelist> { 
let $_aux1 := _xsparql:_serialize(("http://localhost:2020/sparql?query=", fn:encode-for-uri( _xsparql:_serialize((  $_NS1, "
select $x from <http://www.polleres.net/foaf.rdf>  where { [  ]
  foaf:name    $x   .   }  ")))))
for $_aux_result1 at $_aux_result1_Pos in doc($_aux1)//_sparql_result:result
	let $_x_Node := ($_aux_result1/_sparql_result:binding[@name = "x"])
	let $_x_NodeType := name($_x_Node/*)
	let $_x_NodeDatatype := string($_x_Node/*/@datatype)
	let $_x_NodeLang := string($_x_Node/*/@lang)
	let $x := data($_x_Node/*)
	let $_x_RDFTerm :=  _xsparql:_rdf_term($_x_NodeType, $x, $_x_NodeLang, $_x_NodeDatatype )
 return <name>{ $x   }</name>   } </namelist>  

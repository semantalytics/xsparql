
import module namespace _xsparql = "http://xsparql.deri.org/XSPARQLer/xsparql.xquery"
at "http://xsparql.deri.org/XSPARQLer/xsparql.xquery";

declare namespace _sparql_result = "http://www.w3.org/2005/sparql-results#";

declare default element namespace "http://www.example.org";
declare namespace foaf = "http://xmlns.com/foaf/0.1/";


declare variable $_NS1 := "prefix  :  &#60;http://www.example.org&#62;";
declare variable $_NS2 := "prefix  foaf:  &#60;http://xmlns.com/foaf/0.1/&#62;";

 _xsparql:_serialize((  "  
@", $_NS1, ".", "  
@", $_NS2, ".", "
" )),

  
let $x  := "http://www.example.org/i"  

let $y  := "http://www.example.org/myType"  

let $l  := "en"  

let $t  := "myType"  

let $foo  := "bar"  
 

let $_validSubject1 := _xsparql:_serialize(("<" , $x   , ">")) 
let $_validObject2 := _xsparql:_serialize(( '"',   $l   ,  '"', "@",  $l   ))



  return ( 
	 if ( _xsparql:_validSubject( "",  $_validSubject1  ) ) then (
		 
		   
	 if ( _xsparql:_validObject( "",  $_validObject2  ) ) then (
		 _xsparql:_serialize(( 
		     $_validSubject1  ,   " a ", $_validObject2, " .&#xA;"
		))
 ) else ""
		 
  ) else ""  )

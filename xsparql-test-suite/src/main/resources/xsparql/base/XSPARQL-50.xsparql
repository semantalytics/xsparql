
prefix mo: <http://purl.org/ontology/mo/> 
prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> 
prefix foaf: <http://xmlns.com/foaf/0.1/> 
prefix lfm: <http://purl.org/ontology/last-fm/> 
prefix dc: <http://purl.org/dc/elements/1.1/> 
prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> 
prefix geo: <http://www.w3.org/2003/01/geo/wgs84_pos#> 
prefix event: <http://purl.org/NET/c4dm/event.owl#>
prefix xs: <http://www.w3.org/2001/XMLSchema>

declare variable $user := 'jacktrades'; 

<kml ><Document>{ 
let $lastfm := fn:concat("http://ws.audioscrobbler.com/2.0/?method=user.gettopartists&amp;api_key=16307daa8ce0d0cc1dab015e0fdab8ec&amp;user=", $user) 
  for $artistInfo in doc($lastfm)//artist[@rank < 6] 
  let $artist := data($artistInfo/name) 
  let $uri := xs:anyURI(fn:concat("http://lastfm.rdfize.com/artists/", fn:encode-for-uri($artist)))
  for * from $uri
  where { $event mo:performer $uri ; a mo:Performance.
          $event event:place $venue; rdfs:label $label . 
          optional { $venue geo:long $long; geo:lat $lat } } 

return if (fn:string-length($long) != 0) then 
      <Placemark> 
        <name>{fn:concat("Concert of ", $label)}</name> 
         <Point><coordinates>{fn:concat($long, ",", $lat, ",0")}</coordinates></Point> 
       </Placemark> 
else () 
}</Document></kml> 

